// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Teste Sistema "Suas Tarefas"', function() {
  this.timeout(30000)
  let driver
  let vars
  
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  
  afterEach(async function() {
    await driver.quit();
  })

  it('Validar criação de tarefa', async function() {
    await driver.get("https://remsoft.com.br/dev/provaremsoft.com.br/prova/")
    await driver.sleep(1000);
    await driver.findElement(By.id("taskDescription")).click()
    await driver.findElement(By.id("taskDescription")).sendKeys("Tarefa teste")
    await driver.findElement(By.id("addNewTask")).click()
    await driver.sleep(500);
    assert(await driver.findElement(By.id("swal2-title")).getText() == "Tarefa editada")
    await driver.findElement(By.css(".swal2-confirm")).click()
  })
  it('Validar alteração de tarefa', async function() {
        await driver.get("https://remsoft.com.br/dev/provaremsoft.com.br/prova/")
        await driver.sleep(1000)
        await driver.findElement(By.css(".task-item:nth-child(1) .buttons-container > input:nth-child(1)")).click()
        await driver.findElement(By.id("editTask")).click()
        await driver.findElement(By.id("editTask")).sendKeys("olá teste")
        await driver.findElement(By.id("saveTaskEdited")).click()
        await driver.sleep(500)
        assert(await driver.findElement(By.id("swal2-title")).getText() == "Tarefa editada")
        await driver.findElement(By.css(".swal2-confirm")).click()
  })
  it('Validar exclusão de tarefa', async function() {
    await driver.get("https://remsoft.com.br/dev/provaremsoft.com.br/prova/")
    await driver.sleep(1000);
    await driver.findElement(By.css(".task-item:nth-child(1) .buttons-container > input:nth-child(2)")).click()
    await driver.sleep(500)
    assert(await driver.findElement(By.id("swal2-title")).getText() == "Tarefa excluída")
    await driver.findElement(By.css(".swal2-confirm")).click()
  })
  it('Validar toggle da tarefa', async function() {
    await driver.get("https://remsoft.com.br/dev/provaremsoft.com.br/prova/")
    await driver.sleep(1000);
    if(!await driver.findElement(By.css(".task-item:nth-child(1) .task-content > input:nth-child(1)")).isSelected()) {
        await driver.findElement(By.css(".task-item:nth-child(1) .task-content > input:nth-child(1)")).click()
    } else {
      await driver.findElement(By.css(".task-item:nth-child(1) .task-content > input:nth-child(1)")).click()
      await driver.findElement(By.css(".task-item:nth-child(1) .task-content > input:nth-child(1)")).click()
    }
    assert(await driver.findElement(By.css(".task-item:nth-child(1) .task-content > input:nth-child(1)")).isSelected())
  })
  it('Validar toggle da tarefa (Desmarcar)', async function() {
    await driver.get("https://remsoft.com.br/dev/provaremsoft.com.br/prova/")
    await driver.sleep(1000);
    if(await driver.findElement(By.css(".task-item:nth-child(7) .task-content > input:nth-child(1)")).isSelected()) {
        await driver.findElement(By.css(".task-item:nth-child(7) .task-content > input:nth-child(1)")).click()
    } else {
        await driver.findElement(By.css(".task-item:nth-child(7) .task-content > input:nth-child(1)")).click()
        await driver.findElement(By.css(".task-item:nth-child(7) .task-content > input:nth-child(1)")).click()
    }
    assert(!await driver.findElement(By.css(".task-item:nth-child(7) .task-content > input:nth-child(1)")).isSelected())
  })
})
